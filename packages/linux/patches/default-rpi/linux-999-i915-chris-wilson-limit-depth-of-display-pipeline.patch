From 428ce1a022a0bc30cf2d09cde4c1352a88d70d0a Mon Sep 17 00:00:00 2001
From: Chris Wilson <chris@chris-wilson.co.uk>
Date: Fri, 26 Aug 2016 19:26:01 +0100
Subject: [PATCH] drm/i915: Limit the depth of the display pipeline to the
 framebuffer

There is little point in using higher bitdepth inside the pipeline if
the endpoints are of lower accuracy. Using the higher bitdepth requires
extra bandwidth, often to the point of failure - such as signal loss and
blank displays.

Since commit 7a0baa623446 ("Revert "drm/i915: Disable 12bpc hdmi for
now"") we have had users reporting blank screens and rightfully
complaining about the regressions. Whilst these are using due to some
other underlying bug, they have lingered and still remain unresolved. So
let's try a different tact and avoid using higher bitdepths than
required.

Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
---
 drivers/gpu/drm/i915/intel_display.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index af551a2c89ba..05ad77dae2e8 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -10648,9 +10648,11 @@
 			  struct intel_crtc_state *pipe_config)
 {
 	struct drm_i915_private *dev_priv = to_i915(crtc->base.dev);
-	struct drm_atomic_state *state;
+	struct drm_atomic_state *state = pipe_config->base.state;
+	
 	struct drm_connector *connector;
 	struct drm_connector_state *connector_state;
+	struct drm_plane_state *plane_state;
 	int bpp, i;
 
 	if ((IS_G4X(dev_priv) || IS_VALLEYVIEW(dev_priv) ||
@@ -10661,10 +10663,14 @@
 	else
 		bpp = 8*3;
 
+	plane_state = drm_atomic_get_plane_state(state, crtc->base.primary);
+	if (plane_state->fb->depth < bpp)
+	    bpp = 8*3;
 
-	pipe_config->pipe_bpp = bpp;
+    DRM_DEBUG_KMS("initial pipeline bpp = %d (fb depth %d)\n",
+    	      bpp, plane_state->fb->depth);
 
-	state = pipe_config->base.state;
+	pipe_config->pipe_bpp = bpp;
 
 	/* Clamp display bpp to EDID value */
 	for_each_new_connector_in_state(state, connector, connector_state, i) {
-- 
2.9.3

